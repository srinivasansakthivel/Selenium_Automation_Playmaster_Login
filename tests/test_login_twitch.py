import time
import pytest
from PageObject.LoginPage import LoginPage
from PageObject.TwitchLoginPage import TwitchLoginPage
from TestData.LoginTwitchData import LoginTwitchData
from utilities.BaseClass import BaseClass
from PageObject.ProfilePage import ProfilePage


class TestLoginTwitch(BaseClass):

    def test_login_twitch(self, get_data):
        log = self.getlogger()
        log.info("Created logger object from baseclass")
        log.info("Creating login page object, login_page")
        login_page = LoginPage(self.driver)
        log.info("Title of the PlayMaster Page" + self.driver.title)
        self.driver.implicitly_wait(10)
        assert self.driver.title == "PLAYMASTER - CS:GO Training and Skills Practice"
        log.info("Verified the Title of the PlayMaster Page")
        log.info("Protonmail Page URL : " + self.driver.current_url)
        log.info("Checking the present of early access sign-in button")
        self.verify_element_presence_using_cssSelector(login_page.early_access_signup_button_locator)
        lids_page = login_page.click_early_access_sign_button()
        time.sleep(3)
        log.info("Checking the present of Twitch button")
        self.verify_element_presence_using_cssSelector(lids_page.twitch_button_locator)
        twitch_login_page = lids_page.click_twitch_button()
        log.info("Clicked the Twitch button")
        self.verify_element_presence_using_cssSelector(twitch_login_page.twitch_username_field_locator)
        time.sleep(3)
        log.info("Twitch Page URL : " + self.driver.current_url)
        twitch_login_page.enter_twitch_username(username=get_data["username"])
        log.info("Entered the twitch username in the twitch login page")
        twitch_login_page.enter_twitch_password(password=get_data["password"])
        log.info("Entered the twitch password in the twitch login page")
        self.verify_element_presence_using_xpath(twitch_login_page.twitch_login_button_locator)
        log.info("Verified the presence of Twitch log in button")
        time.sleep(1)
        proton_email_page = twitch_login_page.click_login_button()
        log.info("CLicked the login button in the Twitch login page")
        log.info("Title of the Protonmail Page" + self.driver.title)
        log.info("Protonmail Page URL : " + self.driver.current_url)
        proton_email_page.click_proton_homepage_login_button()
        log.info("Clicked the login button in the proton home page")
        self.verify_element_presence_using_xpath(proton_email_page.proton_sign_in_button_locator)
        time.sleep(3)
        log.info("Verified the presence of login button in the Enter User Credentials - Proton login Page")
        proton_email_page.enter_proton_email_username(username=get_data["username"])
        log.info("Enter the username in the proton email login page")
        proton_email_page.enter_proton_email_password(password=get_data["password"])
        log.info("Entered the password in the proton email login page")
        proton_email_page.click_proton_email_sign_in_button()
        log.info("Clicked the Sign-in button in proton email login page")
        time.sleep(6)
        self.verify_element_presence_using_xpath(proton_email_page.proton_header_locator)
        log.info("logged into protonmail successfully")
        proton_email_page.click_proton_twitch_email_header()
        time.sleep(5)
        twitch_passcode = proton_email_page.get_proton_twitch_email_passcode()
        log.info(twitch_passcode)
        proton_email_page.close_proton_email_page()
        self.driver.switch_to.window(self.driver.window_handles[1])
        twitch_login_page = TwitchLoginPage(self.driver)
        time.sleep(6)
        twitch_login_page.enter_twitch_passcode(passcode=twitch_passcode)
        log.info("Logged into Twitch Account successfully")
        self.driver.switch_to.window(self.driver.window_handles[0])
        profile_page = ProfilePage(self.driver)
        time.sleep(20)
        log.info("Current URL of the page : "+self.driver.current_url)
        log.info("Current Title of the page : "+self.driver.title)
        log.info("Checking the presence of PlayMaster header after login")
        self.verify_element_presence_using_cssSelector(profile_page.profile_pm_header_locator)
        log.info("Current URL of the page : " + self.driver.current_url)
        log.info("Current Title of the page : " + self.driver.title)
        self.verify_element_presence_using_cssSelector(profile_page.profile_access_code_field_locator)
        log.info("Verified the presence of access code field")
        assert "access" in self.driver.current_url
        log.info("Verified the access code keyword in the current URL")
        self.verify_element_presence_using_cssSelector(profile_page.profile_access_code_continue_button_locator)
        log.info("Verified the presence of continue button")
        log.info("Login to PlayMaster through Twitch was successful")
        # self.verify_element_presence_using_cssSelector(locator=ProfilePage.profile_name_field_locator)
        # player_profile_name = profile_page.get_profile_name()
        # log.info(f"Logged into {player_profile_name} account successfully")
        # log.info(self.driver.current_url)
        # player_profile_url = self.driver.current_url
        # profile_page.click_setting_button()
        # log.info("Clicked the setting button")
        # profile_page.click_account_settings_button()
        # log.info("Control in account settings page")
        # player_url_identifier = profile_page.get_url_identifier()
        # assert player_url_identifier in player_profile_url
        # profile_page.click_account_settings_close_button()
        # time.sleep(3)
        # log.info("Logged into PlayMaster successful through Twitch")

    @pytest.fixture(params=LoginTwitchData.test_login_twitch_data)
    def get_data(self, request):
        return request.param
